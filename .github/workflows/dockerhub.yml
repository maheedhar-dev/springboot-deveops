name: CI/CD to Docker Hub

# Trigger workflow on every push to main branch
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # MySQL service for CI/CD tests
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      # 1️⃣ Checkout code from repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Cache Maven dependencies for faster builds
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 3️⃣ Set up Java 21
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 4️⃣ Set environment variables for MySQL
      - name: Set DB environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/testdb?useSSL=false&serverTimezone=UTC" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=testuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=testpass" >> $GITHUB_ENV

      # 5️⃣ Build the project and run tests
      - name: Build project
        run: ./mvnw clean package

      # 6️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7️⃣ Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/springboot-deveops:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/springboot-deveops:${{ github.sha }}